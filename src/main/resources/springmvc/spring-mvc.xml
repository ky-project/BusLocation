<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.ky.gps.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:component-scan base-package="com.ky.gps.interceptor"/>

    <!--
        配置InternalResourceViewResolve
        如果我们再目标方法返回一个"loginOK"
        则真实的资源就是prefix/名字/suffix
        loginOK => /WEB-INF/pages/loginOk.jsp
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".html"/>
    </bean>
    <!-- 用于遍历带有@RequestMapping和@Controller注解的处理器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    <!--
        配置可以解析自定义的视图解析器
        1. BeanNameViewResolver:可以解析自定义视图的解析器
        2. name="order"：给这个解析器设置优先级，默认很低，值->Integer.MAX_VALUE
        3. 一般来说，自定义的优先级高，即order越小
    -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="1"/>
    </bean>

    <!-- 拦截器 -->
    <!--<mvc:interceptors>-->
    <!--&lt;!&ndash; 登录拦截器 &ndash;&gt;-->
    <!--<ref bean="loginInterceptor"/>-->
    <!--</mvc:interceptors>-->

    <!-- 加入两个常规配置，引入.js和.css文件 -->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <mvc:resources location="/js/" mapping="/js/**"/>
    <mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/images/" mapping="/images/**"/>

    <import resource="applicationContext-mvc-shiro.xml"/>
</beans>
