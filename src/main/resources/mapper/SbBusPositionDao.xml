<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ky.gps.dao.SbBusPositionDao">
    <resultMap id="BaseSbBusPositionMap" type="com.ky.gps.entity.SbBusPosition">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="gps_id" jdbcType="INTEGER" property="sbGps.id"/>
        <result column="route_id" jdbcType="INTEGER" property="routeId"/>
        <result column="sbp_recode_time" jdbcType="TIMESTAMP" property="sbpRecodeTime"/>
        <result column="sbp_longitude" jdbcType="DOUBLE" property="sbpLongitude"/>
        <result column="sbp_latitude" jdbcType="DOUBLE" property="sbpLatitude"/>
        <result column="sbp_velocity" jdbcType="DOUBLE" property="sbpVelocity"/>
        <result column="sbp_direction" jdbcType="DOUBLE" property="sbpDirection"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="remark1" jdbcType="VARCHAR" property="remark1"/>
        <result column="remark2" jdbcType="VARCHAR" property="remark2"/>
        <result column="remark3" jdbcType="VARCHAR" property="remark3"/>
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
        <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate"/>
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy"/>
        <result column="valid" jdbcType="TINYINT" property="valid"/>
    </resultMap>

    <insert id="savePosition" parameterType="sbbusposition">
        insert into sb_busposition(GPS_ID, ROUTE_ID, sbp_recode_time, sbp_longitude, sbp_latitude, sbp_velocity,
                                   sbp_direction,
                                   created_by, updated_by, valid)
        values (#{sbGps.id}, #{routeId}, #{sbpRecodeTime}, #{sbpLongitude}, #{sbpLatitude}, #{sbpVelocity},
                #{sbpDirection},
                'system', 'system', #{valid})
    </insert>

    <delete id="deleteAll">
        truncate sb_busposition
    </delete>

    <select id="findAllPositionByBusId" resultType="hashmap" parameterType="string">
        select SBP_LONGITUDE longitude, SBP_LATITUDE latitude, SBP_VELOCITY velocity, SBP_DIRECTION direction
        from sb_busposition
        where Valid = 1
          and GPS_ID = #{gpsId}
        order by SBP_RECODE_TIME
    </select>
    <select id="findAllRoutePosition" resultType="hashmap" parameterType="string">
        SELECT route_gps.routeId,
               route_gps.routeName,
               route_gps.startTime,
               route_gps.endTime,
               sb_busposition.SBP_RECODE_TIME recodeTime,
               sb_busposition.SBP_LONGITUDE   longitude,
               sb_busposition.SBP_LATITUDE    latitude,
               sb_busposition.SBP_VELOCITY    velocity,
               sb_busposition.SBP_DIRECTION   direction
        FROM sb_busposition,
             (SELECT sb_route.ID                  routeId,
                     sb_route.SBR_ROUTENAME       routeName,
                     sb_gps.ID                    gpsId,
                     sb_bus_route.SBBR_WEEK       `week`,
                     sb_bus_route.SBBR_START_TIME startTime,
                     sb_bus_route.SBBR_END_TIME   endTime
              FROM sb_bus_route
                       LEFT JOIN sb_route ON sb_bus_route.ROUTE_ID = sb_route.ID
                       LEFT JOIN sb_gps ON sb_bus_route.BUS_ID = sb_gps.BUS_ID
              WHERE sb_bus_route.Valid = 1
                AND sb_route.Valid = 1
                AND sb_gps.Valid = 1) route_gps
        WHERE route_gps.gpsId = sb_busposition.GPS_ID
          AND route_gps.`week` = #{week}
          AND sb_busposition.Valid = 1
        ORDER BY route_gps.routeName, sb_busposition.SBP_RECODE_TIME
    </select>
    <select id="findAllRoutePositionByRouteId" resultType="java.util.Map">
        SELECT route_gps.startTime,
               route_gps.endTime,
               sb_busposition.SBP_RECODE_TIME recodeTime,
               sb_busposition.SBP_LONGITUDE   longitude,
               sb_busposition.SBP_LATITUDE    latitude,
               sb_busposition.SBP_VELOCITY    velocity,
               sb_busposition.SBP_DIRECTION   direction
        FROM sb_busposition,
             (SELECT sb_route.SBR_ROUTENAME       routeName,
                     sb_gps.ID                    gpsId,
                     sb_bus_route.SBBR_WEEK       `week`,
                     sb_bus_route.SBBR_START_TIME startTime,
                     sb_bus_route.SBBR_END_TIME   endTime
              FROM sb_bus_route
                       LEFT JOIN sb_route ON sb_bus_route.ROUTE_ID = sb_route.ID
                       LEFT JOIN sb_gps ON sb_bus_route.BUS_ID = sb_gps.BUS_ID
              WHERE sb_bus_route.Valid = 1
                AND sb_route.Valid = 1
                AND sb_gps.Valid = 1
                AND sb_route.ID = #{routeId}) route_gps
        WHERE route_gps.gpsId = sb_busposition.GPS_ID
          AND route_gps.`week` = #{week}
          AND sb_busposition.Valid = 1
        ORDER BY sb_busposition.SBP_RECODE_TIME
        LIMIT #{startIndex}, #{count}
    </select>
    <select id="findCountByRouteId" resultType="java.lang.Integer">
        SELECT COUNT(ss.ID)
        FROM (
                 SELECT sb_busposition.ID
                 FROM sb_busposition,
                      (SELECT sb_route.SBR_ROUTENAME       routeName,
                              sb_gps.ID                    gpsId,
                              sb_bus_route.SBBR_WEEK       `week`,
                              sb_bus_route.SBBR_START_TIME startTime,
                              sb_bus_route.SBBR_END_TIME   endTime
                       FROM sb_bus_route
                                LEFT JOIN sb_route ON sb_bus_route.ROUTE_ID = sb_route.ID
                                LEFT JOIN sb_gps ON sb_bus_route.BUS_ID = sb_gps.BUS_ID
                       WHERE sb_bus_route.Valid = 1
                         AND sb_route.Valid = 1
                         AND sb_gps.Valid = 1
                         AND sb_route.ID = #{routeId}) route_gps
                 WHERE route_gps.gpsId = sb_busposition.GPS_ID
                   AND route_gps.`week` = #{week}
                   AND sb_busposition.Valid = 1) ss
    </select>
    <select id="findNewPositionByRouteId" resultType="map">
        SELECT sb_busposition.SBP_LONGITUDE longitude,
               sb_busposition.SBP_LATITUDE  latitude,
               sb_busposition.SBP_VELOCITY  velocity,
               sb_busposition.SBP_DIRECTION direction
        FROM sb_busposition,
             (
                 SELECT sb_gps.ID gpsId
                 FROM sb_bus_route
                          LEFT JOIN sb_route ON sb_bus_route.ROUTE_ID = sb_route.ID
                          LEFT JOIN sb_gps ON sb_bus_route.BUS_ID = sb_gps.BUS_ID
                 WHERE sb_bus_route.Valid = 1
                   AND sb_route.Valid = 1
                   AND sb_gps.Valid = 1
                   AND sb_route.ID = #{routeId}
                   AND sb_bus_route.SBBR_WEEK = #{week}
             ) route_gps
        WHERE route_gps.gpsId = sb_busposition.GPS_ID
          AND sb_busposition.Valid = 1
        ORDER BY sb_busposition.SBP_RECODE_TIME DESC
        LIMIT 1
    </select>
    <!--根据路线id查询路线最新定位-->
    <select id="findByRouteId" resultType="map">
        select SBP_RECODE_TIME sbpRecodeTime,
               SBP_LONGITUDE   sbpLongitude,
               SBP_LATITUDE    sbpLatitude,
               SBP_VELOCITY    sbpVelocity,
               SBP_DIRECTION   sbpDirection
        from sb_busposition
        where Valid = 1
        and ROUTE_ID = #{routeId}
        order by SBP_RECODE_TIME desc
        limit 1
    </select>

</mapper>